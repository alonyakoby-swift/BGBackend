volumes:
  db_data:

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  DATABASE_URL: mongodb://db:27017/bergner_database
  DEEPL_API_KEY: ${DEEPL_API_KEY}
  OPENAI_API_KEY: ${OPENAI_API_KEY}

services:
  db:
    image: mongo:latest
    volumes:
      - db_data:/data/db
    restart: unless-stopped
    ports:
      - '27017:27017'

  app:
    image: bergnerbackend:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      db:
        condition: service_started
    ports:
      - '8080:8080'
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]

  migrate:
    image: bergnerbackend:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      db:
        condition: service_started
    command: ["migrate", "--yes"]
    deploy:
      replicas: 0

  revert:
    image: bergnerbackend:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      db:
        condition: service_started
    command: ["migrate", "--revert", "--yes"]
    deploy:
      replicas: 0

  queues:
    image: bergnerbackend:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      db:
        condition: service_started
    command: ["queues", "--scheduled"]
    deploy:
      replicas: 1

  docker-compose-setup:
    image: docker:stable
    command: ["sh", "-c", "apk add --no-cache docker-compose && docker-compose version"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      replicas: 0
